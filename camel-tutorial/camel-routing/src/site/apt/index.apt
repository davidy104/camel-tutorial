	---
	Message Routing EIP 
	---
	
Introduction

	This chapter explains how to make use of Camel's built-in EIPs (Enterprise IntegrationPatterns) to write typical integration logic.
	
Content Based Routing

	When you need to route messages based on the content of the message, and/or based on the headers or properties associated with the message, using Camel's Content Based Router
	EIP is a great way to do that.
	
Filtering Routing

	When you need to perform a sequence of steps only when a message matches a certain condition (Predicate), then a Filter is a good option.
	(similar to an if() {..} else if () {..} else {..} statement in Java)
	
Wire Tap Routing

	When you want to process the current message in the background (concurrently) to the main route, without requiring a response, the Wire Tap EIP can help. A typical use case for this
	is logging the message to a backend system. The main thread of execution will continue to process the message through the current route as usual, while Wire Tap allows additional
	messaging processing to occur outside of the main route.
	
	The body of the wire tapped message is the same object as that in the original message,
as Camel performs a shallow copy of the exchange. It is therefore possible that two routes
executing on the wire-tapped message object may change the internal state of that object,
thereby leaking information into each other. See the following Deep copying of the exchange
section for details on doing a deep copy of the exchange.
	